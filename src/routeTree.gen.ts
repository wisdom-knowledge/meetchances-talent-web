/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ClerkRouteRouteImport } from './routes/clerk/route'
import { Route as PublicRouteRouteImport } from './routes/_public/route'
import { Route as AuthenticatedRouteRouteImport } from './routes/_authenticated/route'
import { Route as AuthenticatedIndexRouteImport } from './routes/_authenticated/index'
import { Route as JobsJob_idRouteImport } from './routes/jobs/$job_id'
import { Route as AuthenticatedWalletRouteImport } from './routes/_authenticated/wallet'
import { Route as errors503RouteImport } from './routes/(errors)/503'
import { Route as errors500RouteImport } from './routes/(errors)/500'
import { Route as errors404RouteImport } from './routes/(errors)/404'
import { Route as errors403RouteImport } from './routes/(errors)/403'
import { Route as errors401RouteImport } from './routes/(errors)/401'
import { Route as authSignUpRouteImport } from './routes/(auth)/sign-up'
import { Route as authSignIn2RouteImport } from './routes/(auth)/sign-in-2'
import { Route as authSignInRouteImport } from './routes/(auth)/sign-in'
import { Route as authOtpRouteImport } from './routes/(auth)/otp'
import { Route as authForgotPasswordRouteImport } from './routes/(auth)/forgot-password'
import { Route as ClerkAuthenticatedRouteRouteImport } from './routes/clerk/_authenticated/route'
import { Route as ClerkauthRouteRouteImport } from './routes/clerk/(auth)/route'
import { Route as AuthenticatedSettingsRouteRouteImport } from './routes/_authenticated/settings/route'
import { Route as PublicMockInterviewIndexRouteImport } from './routes/_public/mock-interview/index'
import { Route as AuthenticatedUsersIndexRouteImport } from './routes/_authenticated/users/index'
import { Route as AuthenticatedTasksIndexRouteImport } from './routes/_authenticated/tasks/index'
import { Route as AuthenticatedTalentPoolIndexRouteImport } from './routes/_authenticated/talent-pool/index'
import { Route as AuthenticatedSettingsIndexRouteImport } from './routes/_authenticated/settings/index'
import { Route as AuthenticatedResumeIndexRouteImport } from './routes/_authenticated/resume/index'
import { Route as AuthenticatedResumeUploadIndexRouteImport } from './routes/_authenticated/resume-upload/index'
import { Route as AuthenticatedMineIndexRouteImport } from './routes/_authenticated/mine/index'
import { Route as AuthenticatedJobsIndexRouteImport } from './routes/_authenticated/jobs/index'
import { Route as AuthenticatedJobRecommendIndexRouteImport } from './routes/_authenticated/job-recommend/index'
import { Route as AuthenticatedJobDetailIndexRouteImport } from './routes/_authenticated/job-detail/index'
import { Route as AuthenticatedInvitedIndexRouteImport } from './routes/_authenticated/invited/index'
import { Route as AuthenticatedInterviewIndexRouteImport } from './routes/_authenticated/interview/index'
import { Route as AuthenticatedInterviewReportsIndexRouteImport } from './routes/_authenticated/interview-reports/index'
import { Route as AuthenticatedHomeIndexRouteImport } from './routes/_authenticated/home/index'
import { Route as AuthenticatedHelpCenterIndexRouteImport } from './routes/_authenticated/help-center/index'
import { Route as AuthenticatedFinishIndexRouteImport } from './routes/_authenticated/finish/index'
import { Route as AuthenticatedChatsIndexRouteImport } from './routes/_authenticated/chats/index'
import { Route as AuthenticatedAppsIndexRouteImport } from './routes/_authenticated/apps/index'
import { Route as AuthenticatedAnnotateReportIndexRouteImport } from './routes/_authenticated/annotate-report/index'
import { Route as ClerkAuthenticatedUserManagementRouteImport } from './routes/clerk/_authenticated/user-management'
import { Route as ClerkauthSignUpRouteImport } from './routes/clerk/(auth)/sign-up'
import { Route as ClerkauthSignInRouteImport } from './routes/clerk/(auth)/sign-in'
import { Route as PublicMockInterviewRecordsRouteImport } from './routes/_public/mock-interview/records'
import { Route as AuthenticatedSettingsNotificationsRouteImport } from './routes/_authenticated/settings/notifications'
import { Route as AuthenticatedSettingsDisplayRouteImport } from './routes/_authenticated/settings/display'
import { Route as AuthenticatedSettingsAppearanceRouteImport } from './routes/_authenticated/settings/appearance'
import { Route as AuthenticatedSettingsAccountRouteImport } from './routes/_authenticated/settings/account'
import { Route as AuthenticatedInterviewSession_viewRouteImport } from './routes/_authenticated/interview/session_view'
import { Route as AuthenticatedInterviewSessionRouteImport } from './routes/_authenticated/interview/session'
import { Route as AuthenticatedInterviewPrepareRouteImport } from './routes/_authenticated/interview/prepare'

const ClerkRouteRoute = ClerkRouteRouteImport.update({
  id: '/clerk',
  path: '/clerk',
  getParentRoute: () => rootRouteImport,
} as any)
const PublicRouteRoute = PublicRouteRouteImport.update({
  id: '/_public',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedRouteRoute = AuthenticatedRouteRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedIndexRoute = AuthenticatedIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const JobsJob_idRoute = JobsJob_idRouteImport.update({
  id: '/jobs/$job_id',
  path: '/jobs/$job_id',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedWalletRoute = AuthenticatedWalletRouteImport.update({
  id: '/wallet',
  path: '/wallet',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const errors503Route = errors503RouteImport.update({
  id: '/(errors)/503',
  path: '/503',
  getParentRoute: () => rootRouteImport,
} as any)
const errors500Route = errors500RouteImport.update({
  id: '/(errors)/500',
  path: '/500',
  getParentRoute: () => rootRouteImport,
} as any)
const errors404Route = errors404RouteImport.update({
  id: '/(errors)/404',
  path: '/404',
  getParentRoute: () => rootRouteImport,
} as any)
const errors403Route = errors403RouteImport.update({
  id: '/(errors)/403',
  path: '/403',
  getParentRoute: () => rootRouteImport,
} as any)
const errors401Route = errors401RouteImport.update({
  id: '/(errors)/401',
  path: '/401',
  getParentRoute: () => rootRouteImport,
} as any)
const authSignUpRoute = authSignUpRouteImport.update({
  id: '/(auth)/sign-up',
  path: '/sign-up',
  getParentRoute: () => rootRouteImport,
} as any)
const authSignIn2Route = authSignIn2RouteImport.update({
  id: '/(auth)/sign-in-2',
  path: '/sign-in-2',
  getParentRoute: () => rootRouteImport,
} as any)
const authSignInRoute = authSignInRouteImport.update({
  id: '/(auth)/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRouteImport,
} as any)
const authOtpRoute = authOtpRouteImport.update({
  id: '/(auth)/otp',
  path: '/otp',
  getParentRoute: () => rootRouteImport,
} as any)
const authForgotPasswordRoute = authForgotPasswordRouteImport.update({
  id: '/(auth)/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => rootRouteImport,
} as any)
const ClerkAuthenticatedRouteRoute = ClerkAuthenticatedRouteRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => ClerkRouteRoute,
} as any)
const ClerkauthRouteRoute = ClerkauthRouteRouteImport.update({
  id: '/(auth)',
  getParentRoute: () => ClerkRouteRoute,
} as any)
const AuthenticatedSettingsRouteRoute =
  AuthenticatedSettingsRouteRouteImport.update({
    id: '/settings',
    path: '/settings',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const PublicMockInterviewIndexRoute =
  PublicMockInterviewIndexRouteImport.update({
    id: '/mock-interview/',
    path: '/mock-interview/',
    getParentRoute: () => PublicRouteRoute,
  } as any)
const AuthenticatedUsersIndexRoute = AuthenticatedUsersIndexRouteImport.update({
  id: '/users/',
  path: '/users/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedTasksIndexRoute = AuthenticatedTasksIndexRouteImport.update({
  id: '/tasks/',
  path: '/tasks/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedTalentPoolIndexRoute =
  AuthenticatedTalentPoolIndexRouteImport.update({
    id: '/talent-pool/',
    path: '/talent-pool/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedSettingsIndexRoute =
  AuthenticatedSettingsIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)
const AuthenticatedResumeIndexRoute =
  AuthenticatedResumeIndexRouteImport.update({
    id: '/resume/',
    path: '/resume/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedResumeUploadIndexRoute =
  AuthenticatedResumeUploadIndexRouteImport.update({
    id: '/resume-upload/',
    path: '/resume-upload/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedMineIndexRoute = AuthenticatedMineIndexRouteImport.update({
  id: '/mine/',
  path: '/mine/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedJobsIndexRoute = AuthenticatedJobsIndexRouteImport.update({
  id: '/jobs/',
  path: '/jobs/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedJobRecommendIndexRoute =
  AuthenticatedJobRecommendIndexRouteImport.update({
    id: '/job-recommend/',
    path: '/job-recommend/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedJobDetailIndexRoute =
  AuthenticatedJobDetailIndexRouteImport.update({
    id: '/job-detail/',
    path: '/job-detail/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedInvitedIndexRoute =
  AuthenticatedInvitedIndexRouteImport.update({
    id: '/invited/',
    path: '/invited/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedInterviewIndexRoute =
  AuthenticatedInterviewIndexRouteImport.update({
    id: '/interview/',
    path: '/interview/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedInterviewReportsIndexRoute =
  AuthenticatedInterviewReportsIndexRouteImport.update({
    id: '/interview-reports/',
    path: '/interview-reports/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedHomeIndexRoute = AuthenticatedHomeIndexRouteImport.update({
  id: '/home/',
  path: '/home/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedHelpCenterIndexRoute =
  AuthenticatedHelpCenterIndexRouteImport.update({
    id: '/help-center/',
    path: '/help-center/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedFinishIndexRoute =
  AuthenticatedFinishIndexRouteImport.update({
    id: '/finish/',
    path: '/finish/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedChatsIndexRoute = AuthenticatedChatsIndexRouteImport.update({
  id: '/chats/',
  path: '/chats/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedAppsIndexRoute = AuthenticatedAppsIndexRouteImport.update({
  id: '/apps/',
  path: '/apps/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedAnnotateReportIndexRoute =
  AuthenticatedAnnotateReportIndexRouteImport.update({
    id: '/annotate-report/',
    path: '/annotate-report/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const ClerkAuthenticatedUserManagementRoute =
  ClerkAuthenticatedUserManagementRouteImport.update({
    id: '/user-management',
    path: '/user-management',
    getParentRoute: () => ClerkAuthenticatedRouteRoute,
  } as any)
const ClerkauthSignUpRoute = ClerkauthSignUpRouteImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => ClerkauthRouteRoute,
} as any)
const ClerkauthSignInRoute = ClerkauthSignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => ClerkauthRouteRoute,
} as any)
const PublicMockInterviewRecordsRoute =
  PublicMockInterviewRecordsRouteImport.update({
    id: '/mock-interview/records',
    path: '/mock-interview/records',
    getParentRoute: () => PublicRouteRoute,
  } as any)
const AuthenticatedSettingsNotificationsRoute =
  AuthenticatedSettingsNotificationsRouteImport.update({
    id: '/notifications',
    path: '/notifications',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)
const AuthenticatedSettingsDisplayRoute =
  AuthenticatedSettingsDisplayRouteImport.update({
    id: '/display',
    path: '/display',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)
const AuthenticatedSettingsAppearanceRoute =
  AuthenticatedSettingsAppearanceRouteImport.update({
    id: '/appearance',
    path: '/appearance',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)
const AuthenticatedSettingsAccountRoute =
  AuthenticatedSettingsAccountRouteImport.update({
    id: '/account',
    path: '/account',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)
const AuthenticatedInterviewSession_viewRoute =
  AuthenticatedInterviewSession_viewRouteImport.update({
    id: '/interview/session_view',
    path: '/interview/session_view',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedInterviewSessionRoute =
  AuthenticatedInterviewSessionRouteImport.update({
    id: '/interview/session',
    path: '/interview/session',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedInterviewPrepareRoute =
  AuthenticatedInterviewPrepareRouteImport.update({
    id: '/interview/prepare',
    path: '/interview/prepare',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/clerk': typeof ClerkAuthenticatedRouteRouteWithChildren
  '/settings': typeof AuthenticatedSettingsRouteRouteWithChildren
  '/clerk/': typeof ClerkauthRouteRouteWithChildren
  '/forgot-password': typeof authForgotPasswordRoute
  '/otp': typeof authOtpRoute
  '/sign-in': typeof authSignInRoute
  '/sign-in-2': typeof authSignIn2Route
  '/sign-up': typeof authSignUpRoute
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/wallet': typeof AuthenticatedWalletRoute
  '/jobs/$job_id': typeof JobsJob_idRoute
  '/': typeof AuthenticatedIndexRoute
  '/interview/prepare': typeof AuthenticatedInterviewPrepareRoute
  '/interview/session': typeof AuthenticatedInterviewSessionRoute
  '/interview/session_view': typeof AuthenticatedInterviewSession_viewRoute
  '/settings/account': typeof AuthenticatedSettingsAccountRoute
  '/settings/appearance': typeof AuthenticatedSettingsAppearanceRoute
  '/settings/display': typeof AuthenticatedSettingsDisplayRoute
  '/settings/notifications': typeof AuthenticatedSettingsNotificationsRoute
  '/mock-interview/records': typeof PublicMockInterviewRecordsRoute
  '/clerk/sign-in': typeof ClerkauthSignInRoute
  '/clerk/sign-up': typeof ClerkauthSignUpRoute
  '/clerk/user-management': typeof ClerkAuthenticatedUserManagementRoute
  '/annotate-report': typeof AuthenticatedAnnotateReportIndexRoute
  '/apps': typeof AuthenticatedAppsIndexRoute
  '/chats': typeof AuthenticatedChatsIndexRoute
  '/finish': typeof AuthenticatedFinishIndexRoute
  '/help-center': typeof AuthenticatedHelpCenterIndexRoute
  '/home': typeof AuthenticatedHomeIndexRoute
  '/interview-reports': typeof AuthenticatedInterviewReportsIndexRoute
  '/interview': typeof AuthenticatedInterviewIndexRoute
  '/invited': typeof AuthenticatedInvitedIndexRoute
  '/job-detail': typeof AuthenticatedJobDetailIndexRoute
  '/job-recommend': typeof AuthenticatedJobRecommendIndexRoute
  '/jobs': typeof AuthenticatedJobsIndexRoute
  '/mine': typeof AuthenticatedMineIndexRoute
  '/resume-upload': typeof AuthenticatedResumeUploadIndexRoute
  '/resume': typeof AuthenticatedResumeIndexRoute
  '/settings/': typeof AuthenticatedSettingsIndexRoute
  '/talent-pool': typeof AuthenticatedTalentPoolIndexRoute
  '/tasks': typeof AuthenticatedTasksIndexRoute
  '/users': typeof AuthenticatedUsersIndexRoute
  '/mock-interview': typeof PublicMockInterviewIndexRoute
}
export interface FileRoutesByTo {
  '/clerk': typeof ClerkAuthenticatedRouteRouteWithChildren
  '/forgot-password': typeof authForgotPasswordRoute
  '/otp': typeof authOtpRoute
  '/sign-in': typeof authSignInRoute
  '/sign-in-2': typeof authSignIn2Route
  '/sign-up': typeof authSignUpRoute
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/wallet': typeof AuthenticatedWalletRoute
  '/jobs/$job_id': typeof JobsJob_idRoute
  '/': typeof AuthenticatedIndexRoute
  '/interview/prepare': typeof AuthenticatedInterviewPrepareRoute
  '/interview/session': typeof AuthenticatedInterviewSessionRoute
  '/interview/session_view': typeof AuthenticatedInterviewSession_viewRoute
  '/settings/account': typeof AuthenticatedSettingsAccountRoute
  '/settings/appearance': typeof AuthenticatedSettingsAppearanceRoute
  '/settings/display': typeof AuthenticatedSettingsDisplayRoute
  '/settings/notifications': typeof AuthenticatedSettingsNotificationsRoute
  '/mock-interview/records': typeof PublicMockInterviewRecordsRoute
  '/clerk/sign-in': typeof ClerkauthSignInRoute
  '/clerk/sign-up': typeof ClerkauthSignUpRoute
  '/clerk/user-management': typeof ClerkAuthenticatedUserManagementRoute
  '/annotate-report': typeof AuthenticatedAnnotateReportIndexRoute
  '/apps': typeof AuthenticatedAppsIndexRoute
  '/chats': typeof AuthenticatedChatsIndexRoute
  '/finish': typeof AuthenticatedFinishIndexRoute
  '/help-center': typeof AuthenticatedHelpCenterIndexRoute
  '/home': typeof AuthenticatedHomeIndexRoute
  '/interview-reports': typeof AuthenticatedInterviewReportsIndexRoute
  '/interview': typeof AuthenticatedInterviewIndexRoute
  '/invited': typeof AuthenticatedInvitedIndexRoute
  '/job-detail': typeof AuthenticatedJobDetailIndexRoute
  '/job-recommend': typeof AuthenticatedJobRecommendIndexRoute
  '/jobs': typeof AuthenticatedJobsIndexRoute
  '/mine': typeof AuthenticatedMineIndexRoute
  '/resume-upload': typeof AuthenticatedResumeUploadIndexRoute
  '/resume': typeof AuthenticatedResumeIndexRoute
  '/settings': typeof AuthenticatedSettingsIndexRoute
  '/talent-pool': typeof AuthenticatedTalentPoolIndexRoute
  '/tasks': typeof AuthenticatedTasksIndexRoute
  '/users': typeof AuthenticatedUsersIndexRoute
  '/mock-interview': typeof PublicMockInterviewIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/_public': typeof PublicRouteRouteWithChildren
  '/clerk': typeof ClerkRouteRouteWithChildren
  '/_authenticated/settings': typeof AuthenticatedSettingsRouteRouteWithChildren
  '/clerk/(auth)': typeof ClerkauthRouteRouteWithChildren
  '/clerk/_authenticated': typeof ClerkAuthenticatedRouteRouteWithChildren
  '/(auth)/forgot-password': typeof authForgotPasswordRoute
  '/(auth)/otp': typeof authOtpRoute
  '/(auth)/sign-in': typeof authSignInRoute
  '/(auth)/sign-in-2': typeof authSignIn2Route
  '/(auth)/sign-up': typeof authSignUpRoute
  '/(errors)/401': typeof errors401Route
  '/(errors)/403': typeof errors403Route
  '/(errors)/404': typeof errors404Route
  '/(errors)/500': typeof errors500Route
  '/(errors)/503': typeof errors503Route
  '/_authenticated/wallet': typeof AuthenticatedWalletRoute
  '/jobs/$job_id': typeof JobsJob_idRoute
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_authenticated/interview/prepare': typeof AuthenticatedInterviewPrepareRoute
  '/_authenticated/interview/session': typeof AuthenticatedInterviewSessionRoute
  '/_authenticated/interview/session_view': typeof AuthenticatedInterviewSession_viewRoute
  '/_authenticated/settings/account': typeof AuthenticatedSettingsAccountRoute
  '/_authenticated/settings/appearance': typeof AuthenticatedSettingsAppearanceRoute
  '/_authenticated/settings/display': typeof AuthenticatedSettingsDisplayRoute
  '/_authenticated/settings/notifications': typeof AuthenticatedSettingsNotificationsRoute
  '/_public/mock-interview/records': typeof PublicMockInterviewRecordsRoute
  '/clerk/(auth)/sign-in': typeof ClerkauthSignInRoute
  '/clerk/(auth)/sign-up': typeof ClerkauthSignUpRoute
  '/clerk/_authenticated/user-management': typeof ClerkAuthenticatedUserManagementRoute
  '/_authenticated/annotate-report/': typeof AuthenticatedAnnotateReportIndexRoute
  '/_authenticated/apps/': typeof AuthenticatedAppsIndexRoute
  '/_authenticated/chats/': typeof AuthenticatedChatsIndexRoute
  '/_authenticated/finish/': typeof AuthenticatedFinishIndexRoute
  '/_authenticated/help-center/': typeof AuthenticatedHelpCenterIndexRoute
  '/_authenticated/home/': typeof AuthenticatedHomeIndexRoute
  '/_authenticated/interview-reports/': typeof AuthenticatedInterviewReportsIndexRoute
  '/_authenticated/interview/': typeof AuthenticatedInterviewIndexRoute
  '/_authenticated/invited/': typeof AuthenticatedInvitedIndexRoute
  '/_authenticated/job-detail/': typeof AuthenticatedJobDetailIndexRoute
  '/_authenticated/job-recommend/': typeof AuthenticatedJobRecommendIndexRoute
  '/_authenticated/jobs/': typeof AuthenticatedJobsIndexRoute
  '/_authenticated/mine/': typeof AuthenticatedMineIndexRoute
  '/_authenticated/resume-upload/': typeof AuthenticatedResumeUploadIndexRoute
  '/_authenticated/resume/': typeof AuthenticatedResumeIndexRoute
  '/_authenticated/settings/': typeof AuthenticatedSettingsIndexRoute
  '/_authenticated/talent-pool/': typeof AuthenticatedTalentPoolIndexRoute
  '/_authenticated/tasks/': typeof AuthenticatedTasksIndexRoute
  '/_authenticated/users/': typeof AuthenticatedUsersIndexRoute
  '/_public/mock-interview/': typeof PublicMockInterviewIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/clerk'
    | '/settings'
    | '/clerk/'
    | '/forgot-password'
    | '/otp'
    | '/sign-in'
    | '/sign-in-2'
    | '/sign-up'
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/wallet'
    | '/jobs/$job_id'
    | '/'
    | '/interview/prepare'
    | '/interview/session'
    | '/interview/session_view'
    | '/settings/account'
    | '/settings/appearance'
    | '/settings/display'
    | '/settings/notifications'
    | '/mock-interview/records'
    | '/clerk/sign-in'
    | '/clerk/sign-up'
    | '/clerk/user-management'
    | '/annotate-report'
    | '/apps'
    | '/chats'
    | '/finish'
    | '/help-center'
    | '/home'
    | '/interview-reports'
    | '/interview'
    | '/invited'
    | '/job-detail'
    | '/job-recommend'
    | '/jobs'
    | '/mine'
    | '/resume-upload'
    | '/resume'
    | '/settings/'
    | '/talent-pool'
    | '/tasks'
    | '/users'
    | '/mock-interview'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/clerk'
    | '/forgot-password'
    | '/otp'
    | '/sign-in'
    | '/sign-in-2'
    | '/sign-up'
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/wallet'
    | '/jobs/$job_id'
    | '/'
    | '/interview/prepare'
    | '/interview/session'
    | '/interview/session_view'
    | '/settings/account'
    | '/settings/appearance'
    | '/settings/display'
    | '/settings/notifications'
    | '/mock-interview/records'
    | '/clerk/sign-in'
    | '/clerk/sign-up'
    | '/clerk/user-management'
    | '/annotate-report'
    | '/apps'
    | '/chats'
    | '/finish'
    | '/help-center'
    | '/home'
    | '/interview-reports'
    | '/interview'
    | '/invited'
    | '/job-detail'
    | '/job-recommend'
    | '/jobs'
    | '/mine'
    | '/resume-upload'
    | '/resume'
    | '/settings'
    | '/talent-pool'
    | '/tasks'
    | '/users'
    | '/mock-interview'
  id:
    | '__root__'
    | '/_authenticated'
    | '/_public'
    | '/clerk'
    | '/_authenticated/settings'
    | '/clerk/(auth)'
    | '/clerk/_authenticated'
    | '/(auth)/forgot-password'
    | '/(auth)/otp'
    | '/(auth)/sign-in'
    | '/(auth)/sign-in-2'
    | '/(auth)/sign-up'
    | '/(errors)/401'
    | '/(errors)/403'
    | '/(errors)/404'
    | '/(errors)/500'
    | '/(errors)/503'
    | '/_authenticated/wallet'
    | '/jobs/$job_id'
    | '/_authenticated/'
    | '/_authenticated/interview/prepare'
    | '/_authenticated/interview/session'
    | '/_authenticated/interview/session_view'
    | '/_authenticated/settings/account'
    | '/_authenticated/settings/appearance'
    | '/_authenticated/settings/display'
    | '/_authenticated/settings/notifications'
    | '/_public/mock-interview/records'
    | '/clerk/(auth)/sign-in'
    | '/clerk/(auth)/sign-up'
    | '/clerk/_authenticated/user-management'
    | '/_authenticated/annotate-report/'
    | '/_authenticated/apps/'
    | '/_authenticated/chats/'
    | '/_authenticated/finish/'
    | '/_authenticated/help-center/'
    | '/_authenticated/home/'
    | '/_authenticated/interview-reports/'
    | '/_authenticated/interview/'
    | '/_authenticated/invited/'
    | '/_authenticated/job-detail/'
    | '/_authenticated/job-recommend/'
    | '/_authenticated/jobs/'
    | '/_authenticated/mine/'
    | '/_authenticated/resume-upload/'
    | '/_authenticated/resume/'
    | '/_authenticated/settings/'
    | '/_authenticated/talent-pool/'
    | '/_authenticated/tasks/'
    | '/_authenticated/users/'
    | '/_public/mock-interview/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
  PublicRouteRoute: typeof PublicRouteRouteWithChildren
  ClerkRouteRoute: typeof ClerkRouteRouteWithChildren
  authForgotPasswordRoute: typeof authForgotPasswordRoute
  authOtpRoute: typeof authOtpRoute
  authSignInRoute: typeof authSignInRoute
  authSignIn2Route: typeof authSignIn2Route
  authSignUpRoute: typeof authSignUpRoute
  errors401Route: typeof errors401Route
  errors403Route: typeof errors403Route
  errors404Route: typeof errors404Route
  errors500Route: typeof errors500Route
  errors503Route: typeof errors503Route
  JobsJob_idRoute: typeof JobsJob_idRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/clerk': {
      id: '/clerk'
      path: '/clerk'
      fullPath: '/clerk'
      preLoaderRoute: typeof ClerkRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_public': {
      id: '/_public'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PublicRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/jobs/$job_id': {
      id: '/jobs/$job_id'
      path: '/jobs/$job_id'
      fullPath: '/jobs/$job_id'
      preLoaderRoute: typeof JobsJob_idRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/wallet': {
      id: '/_authenticated/wallet'
      path: '/wallet'
      fullPath: '/wallet'
      preLoaderRoute: typeof AuthenticatedWalletRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/(errors)/503': {
      id: '/(errors)/503'
      path: '/503'
      fullPath: '/503'
      preLoaderRoute: typeof errors503RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/500': {
      id: '/(errors)/500'
      path: '/500'
      fullPath: '/500'
      preLoaderRoute: typeof errors500RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/404': {
      id: '/(errors)/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof errors404RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/403': {
      id: '/(errors)/403'
      path: '/403'
      fullPath: '/403'
      preLoaderRoute: typeof errors403RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/401': {
      id: '/(errors)/401'
      path: '/401'
      fullPath: '/401'
      preLoaderRoute: typeof errors401RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/sign-up': {
      id: '/(auth)/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof authSignUpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/sign-in-2': {
      id: '/(auth)/sign-in-2'
      path: '/sign-in-2'
      fullPath: '/sign-in-2'
      preLoaderRoute: typeof authSignIn2RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/sign-in': {
      id: '/(auth)/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof authSignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/otp': {
      id: '/(auth)/otp'
      path: '/otp'
      fullPath: '/otp'
      preLoaderRoute: typeof authOtpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/forgot-password': {
      id: '/(auth)/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof authForgotPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/clerk/_authenticated': {
      id: '/clerk/_authenticated'
      path: ''
      fullPath: '/clerk'
      preLoaderRoute: typeof ClerkAuthenticatedRouteRouteImport
      parentRoute: typeof ClerkRouteRoute
    }
    '/clerk/(auth)': {
      id: '/clerk/(auth)'
      path: '/'
      fullPath: '/clerk/'
      preLoaderRoute: typeof ClerkauthRouteRouteImport
      parentRoute: typeof ClerkRouteRoute
    }
    '/_authenticated/settings': {
      id: '/_authenticated/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthenticatedSettingsRouteRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_public/mock-interview/': {
      id: '/_public/mock-interview/'
      path: '/mock-interview'
      fullPath: '/mock-interview'
      preLoaderRoute: typeof PublicMockInterviewIndexRouteImport
      parentRoute: typeof PublicRouteRoute
    }
    '/_authenticated/users/': {
      id: '/_authenticated/users/'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof AuthenticatedUsersIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/tasks/': {
      id: '/_authenticated/tasks/'
      path: '/tasks'
      fullPath: '/tasks'
      preLoaderRoute: typeof AuthenticatedTasksIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/talent-pool/': {
      id: '/_authenticated/talent-pool/'
      path: '/talent-pool'
      fullPath: '/talent-pool'
      preLoaderRoute: typeof AuthenticatedTalentPoolIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/settings/': {
      id: '/_authenticated/settings/'
      path: '/'
      fullPath: '/settings/'
      preLoaderRoute: typeof AuthenticatedSettingsIndexRouteImport
      parentRoute: typeof AuthenticatedSettingsRouteRoute
    }
    '/_authenticated/resume/': {
      id: '/_authenticated/resume/'
      path: '/resume'
      fullPath: '/resume'
      preLoaderRoute: typeof AuthenticatedResumeIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/resume-upload/': {
      id: '/_authenticated/resume-upload/'
      path: '/resume-upload'
      fullPath: '/resume-upload'
      preLoaderRoute: typeof AuthenticatedResumeUploadIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/mine/': {
      id: '/_authenticated/mine/'
      path: '/mine'
      fullPath: '/mine'
      preLoaderRoute: typeof AuthenticatedMineIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/jobs/': {
      id: '/_authenticated/jobs/'
      path: '/jobs'
      fullPath: '/jobs'
      preLoaderRoute: typeof AuthenticatedJobsIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/job-recommend/': {
      id: '/_authenticated/job-recommend/'
      path: '/job-recommend'
      fullPath: '/job-recommend'
      preLoaderRoute: typeof AuthenticatedJobRecommendIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/job-detail/': {
      id: '/_authenticated/job-detail/'
      path: '/job-detail'
      fullPath: '/job-detail'
      preLoaderRoute: typeof AuthenticatedJobDetailIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/invited/': {
      id: '/_authenticated/invited/'
      path: '/invited'
      fullPath: '/invited'
      preLoaderRoute: typeof AuthenticatedInvitedIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/interview/': {
      id: '/_authenticated/interview/'
      path: '/interview'
      fullPath: '/interview'
      preLoaderRoute: typeof AuthenticatedInterviewIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/interview-reports/': {
      id: '/_authenticated/interview-reports/'
      path: '/interview-reports'
      fullPath: '/interview-reports'
      preLoaderRoute: typeof AuthenticatedInterviewReportsIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/home/': {
      id: '/_authenticated/home/'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof AuthenticatedHomeIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/help-center/': {
      id: '/_authenticated/help-center/'
      path: '/help-center'
      fullPath: '/help-center'
      preLoaderRoute: typeof AuthenticatedHelpCenterIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/finish/': {
      id: '/_authenticated/finish/'
      path: '/finish'
      fullPath: '/finish'
      preLoaderRoute: typeof AuthenticatedFinishIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/chats/': {
      id: '/_authenticated/chats/'
      path: '/chats'
      fullPath: '/chats'
      preLoaderRoute: typeof AuthenticatedChatsIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/apps/': {
      id: '/_authenticated/apps/'
      path: '/apps'
      fullPath: '/apps'
      preLoaderRoute: typeof AuthenticatedAppsIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/annotate-report/': {
      id: '/_authenticated/annotate-report/'
      path: '/annotate-report'
      fullPath: '/annotate-report'
      preLoaderRoute: typeof AuthenticatedAnnotateReportIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/clerk/_authenticated/user-management': {
      id: '/clerk/_authenticated/user-management'
      path: '/user-management'
      fullPath: '/clerk/user-management'
      preLoaderRoute: typeof ClerkAuthenticatedUserManagementRouteImport
      parentRoute: typeof ClerkAuthenticatedRouteRoute
    }
    '/clerk/(auth)/sign-up': {
      id: '/clerk/(auth)/sign-up'
      path: '/sign-up'
      fullPath: '/clerk/sign-up'
      preLoaderRoute: typeof ClerkauthSignUpRouteImport
      parentRoute: typeof ClerkauthRouteRoute
    }
    '/clerk/(auth)/sign-in': {
      id: '/clerk/(auth)/sign-in'
      path: '/sign-in'
      fullPath: '/clerk/sign-in'
      preLoaderRoute: typeof ClerkauthSignInRouteImport
      parentRoute: typeof ClerkauthRouteRoute
    }
    '/_public/mock-interview/records': {
      id: '/_public/mock-interview/records'
      path: '/mock-interview/records'
      fullPath: '/mock-interview/records'
      preLoaderRoute: typeof PublicMockInterviewRecordsRouteImport
      parentRoute: typeof PublicRouteRoute
    }
    '/_authenticated/settings/notifications': {
      id: '/_authenticated/settings/notifications'
      path: '/notifications'
      fullPath: '/settings/notifications'
      preLoaderRoute: typeof AuthenticatedSettingsNotificationsRouteImport
      parentRoute: typeof AuthenticatedSettingsRouteRoute
    }
    '/_authenticated/settings/display': {
      id: '/_authenticated/settings/display'
      path: '/display'
      fullPath: '/settings/display'
      preLoaderRoute: typeof AuthenticatedSettingsDisplayRouteImport
      parentRoute: typeof AuthenticatedSettingsRouteRoute
    }
    '/_authenticated/settings/appearance': {
      id: '/_authenticated/settings/appearance'
      path: '/appearance'
      fullPath: '/settings/appearance'
      preLoaderRoute: typeof AuthenticatedSettingsAppearanceRouteImport
      parentRoute: typeof AuthenticatedSettingsRouteRoute
    }
    '/_authenticated/settings/account': {
      id: '/_authenticated/settings/account'
      path: '/account'
      fullPath: '/settings/account'
      preLoaderRoute: typeof AuthenticatedSettingsAccountRouteImport
      parentRoute: typeof AuthenticatedSettingsRouteRoute
    }
    '/_authenticated/interview/session_view': {
      id: '/_authenticated/interview/session_view'
      path: '/interview/session_view'
      fullPath: '/interview/session_view'
      preLoaderRoute: typeof AuthenticatedInterviewSession_viewRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/interview/session': {
      id: '/_authenticated/interview/session'
      path: '/interview/session'
      fullPath: '/interview/session'
      preLoaderRoute: typeof AuthenticatedInterviewSessionRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/interview/prepare': {
      id: '/_authenticated/interview/prepare'
      path: '/interview/prepare'
      fullPath: '/interview/prepare'
      preLoaderRoute: typeof AuthenticatedInterviewPrepareRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
  }
}

interface AuthenticatedSettingsRouteRouteChildren {
  AuthenticatedSettingsAccountRoute: typeof AuthenticatedSettingsAccountRoute
  AuthenticatedSettingsAppearanceRoute: typeof AuthenticatedSettingsAppearanceRoute
  AuthenticatedSettingsDisplayRoute: typeof AuthenticatedSettingsDisplayRoute
  AuthenticatedSettingsNotificationsRoute: typeof AuthenticatedSettingsNotificationsRoute
  AuthenticatedSettingsIndexRoute: typeof AuthenticatedSettingsIndexRoute
}

const AuthenticatedSettingsRouteRouteChildren: AuthenticatedSettingsRouteRouteChildren =
  {
    AuthenticatedSettingsAccountRoute: AuthenticatedSettingsAccountRoute,
    AuthenticatedSettingsAppearanceRoute: AuthenticatedSettingsAppearanceRoute,
    AuthenticatedSettingsDisplayRoute: AuthenticatedSettingsDisplayRoute,
    AuthenticatedSettingsNotificationsRoute:
      AuthenticatedSettingsNotificationsRoute,
    AuthenticatedSettingsIndexRoute: AuthenticatedSettingsIndexRoute,
  }

const AuthenticatedSettingsRouteRouteWithChildren =
  AuthenticatedSettingsRouteRoute._addFileChildren(
    AuthenticatedSettingsRouteRouteChildren,
  )

interface AuthenticatedRouteRouteChildren {
  AuthenticatedSettingsRouteRoute: typeof AuthenticatedSettingsRouteRouteWithChildren
  AuthenticatedWalletRoute: typeof AuthenticatedWalletRoute
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
  AuthenticatedInterviewPrepareRoute: typeof AuthenticatedInterviewPrepareRoute
  AuthenticatedInterviewSessionRoute: typeof AuthenticatedInterviewSessionRoute
  AuthenticatedInterviewSession_viewRoute: typeof AuthenticatedInterviewSession_viewRoute
  AuthenticatedAnnotateReportIndexRoute: typeof AuthenticatedAnnotateReportIndexRoute
  AuthenticatedAppsIndexRoute: typeof AuthenticatedAppsIndexRoute
  AuthenticatedChatsIndexRoute: typeof AuthenticatedChatsIndexRoute
  AuthenticatedFinishIndexRoute: typeof AuthenticatedFinishIndexRoute
  AuthenticatedHelpCenterIndexRoute: typeof AuthenticatedHelpCenterIndexRoute
  AuthenticatedHomeIndexRoute: typeof AuthenticatedHomeIndexRoute
  AuthenticatedInterviewReportsIndexRoute: typeof AuthenticatedInterviewReportsIndexRoute
  AuthenticatedInterviewIndexRoute: typeof AuthenticatedInterviewIndexRoute
  AuthenticatedInvitedIndexRoute: typeof AuthenticatedInvitedIndexRoute
  AuthenticatedJobDetailIndexRoute: typeof AuthenticatedJobDetailIndexRoute
  AuthenticatedJobRecommendIndexRoute: typeof AuthenticatedJobRecommendIndexRoute
  AuthenticatedJobsIndexRoute: typeof AuthenticatedJobsIndexRoute
  AuthenticatedMineIndexRoute: typeof AuthenticatedMineIndexRoute
  AuthenticatedResumeUploadIndexRoute: typeof AuthenticatedResumeUploadIndexRoute
  AuthenticatedResumeIndexRoute: typeof AuthenticatedResumeIndexRoute
  AuthenticatedTalentPoolIndexRoute: typeof AuthenticatedTalentPoolIndexRoute
  AuthenticatedTasksIndexRoute: typeof AuthenticatedTasksIndexRoute
  AuthenticatedUsersIndexRoute: typeof AuthenticatedUsersIndexRoute
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedSettingsRouteRoute: AuthenticatedSettingsRouteRouteWithChildren,
  AuthenticatedWalletRoute: AuthenticatedWalletRoute,
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
  AuthenticatedInterviewPrepareRoute: AuthenticatedInterviewPrepareRoute,
  AuthenticatedInterviewSessionRoute: AuthenticatedInterviewSessionRoute,
  AuthenticatedInterviewSession_viewRoute:
    AuthenticatedInterviewSession_viewRoute,
  AuthenticatedAnnotateReportIndexRoute: AuthenticatedAnnotateReportIndexRoute,
  AuthenticatedAppsIndexRoute: AuthenticatedAppsIndexRoute,
  AuthenticatedChatsIndexRoute: AuthenticatedChatsIndexRoute,
  AuthenticatedFinishIndexRoute: AuthenticatedFinishIndexRoute,
  AuthenticatedHelpCenterIndexRoute: AuthenticatedHelpCenterIndexRoute,
  AuthenticatedHomeIndexRoute: AuthenticatedHomeIndexRoute,
  AuthenticatedInterviewReportsIndexRoute:
    AuthenticatedInterviewReportsIndexRoute,
  AuthenticatedInterviewIndexRoute: AuthenticatedInterviewIndexRoute,
  AuthenticatedInvitedIndexRoute: AuthenticatedInvitedIndexRoute,
  AuthenticatedJobDetailIndexRoute: AuthenticatedJobDetailIndexRoute,
  AuthenticatedJobRecommendIndexRoute: AuthenticatedJobRecommendIndexRoute,
  AuthenticatedJobsIndexRoute: AuthenticatedJobsIndexRoute,
  AuthenticatedMineIndexRoute: AuthenticatedMineIndexRoute,
  AuthenticatedResumeUploadIndexRoute: AuthenticatedResumeUploadIndexRoute,
  AuthenticatedResumeIndexRoute: AuthenticatedResumeIndexRoute,
  AuthenticatedTalentPoolIndexRoute: AuthenticatedTalentPoolIndexRoute,
  AuthenticatedTasksIndexRoute: AuthenticatedTasksIndexRoute,
  AuthenticatedUsersIndexRoute: AuthenticatedUsersIndexRoute,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

interface PublicRouteRouteChildren {
  PublicMockInterviewRecordsRoute: typeof PublicMockInterviewRecordsRoute
  PublicMockInterviewIndexRoute: typeof PublicMockInterviewIndexRoute
}

const PublicRouteRouteChildren: PublicRouteRouteChildren = {
  PublicMockInterviewRecordsRoute: PublicMockInterviewRecordsRoute,
  PublicMockInterviewIndexRoute: PublicMockInterviewIndexRoute,
}

const PublicRouteRouteWithChildren = PublicRouteRoute._addFileChildren(
  PublicRouteRouteChildren,
)

interface ClerkauthRouteRouteChildren {
  ClerkauthSignInRoute: typeof ClerkauthSignInRoute
  ClerkauthSignUpRoute: typeof ClerkauthSignUpRoute
}

const ClerkauthRouteRouteChildren: ClerkauthRouteRouteChildren = {
  ClerkauthSignInRoute: ClerkauthSignInRoute,
  ClerkauthSignUpRoute: ClerkauthSignUpRoute,
}

const ClerkauthRouteRouteWithChildren = ClerkauthRouteRoute._addFileChildren(
  ClerkauthRouteRouteChildren,
)

interface ClerkAuthenticatedRouteRouteChildren {
  ClerkAuthenticatedUserManagementRoute: typeof ClerkAuthenticatedUserManagementRoute
}

const ClerkAuthenticatedRouteRouteChildren: ClerkAuthenticatedRouteRouteChildren =
  {
    ClerkAuthenticatedUserManagementRoute:
      ClerkAuthenticatedUserManagementRoute,
  }

const ClerkAuthenticatedRouteRouteWithChildren =
  ClerkAuthenticatedRouteRoute._addFileChildren(
    ClerkAuthenticatedRouteRouteChildren,
  )

interface ClerkRouteRouteChildren {
  ClerkauthRouteRoute: typeof ClerkauthRouteRouteWithChildren
  ClerkAuthenticatedRouteRoute: typeof ClerkAuthenticatedRouteRouteWithChildren
}

const ClerkRouteRouteChildren: ClerkRouteRouteChildren = {
  ClerkauthRouteRoute: ClerkauthRouteRouteWithChildren,
  ClerkAuthenticatedRouteRoute: ClerkAuthenticatedRouteRouteWithChildren,
}

const ClerkRouteRouteWithChildren = ClerkRouteRoute._addFileChildren(
  ClerkRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  PublicRouteRoute: PublicRouteRouteWithChildren,
  ClerkRouteRoute: ClerkRouteRouteWithChildren,
  authForgotPasswordRoute: authForgotPasswordRoute,
  authOtpRoute: authOtpRoute,
  authSignInRoute: authSignInRoute,
  authSignIn2Route: authSignIn2Route,
  authSignUpRoute: authSignUpRoute,
  errors401Route: errors401Route,
  errors403Route: errors403Route,
  errors404Route: errors404Route,
  errors500Route: errors500Route,
  errors503Route: errors503Route,
  JobsJob_idRoute: JobsJob_idRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
